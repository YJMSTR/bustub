# 4 pts

# Simple sort

# Default
query
select * from __mock_table_1 order by colB desc limit 10;
----
99 9900
98 9800
97 9700
96 9600
95 9500
94 9400
93 9300
92 9200
91 9100
90 9000


# Simple limit
query
select * from test_simple_seq_2 limit 5;
----
0 10
1 11
2 12
3 13
4 14


query
select * from test_simple_seq_2 limit 15;
----
0 10
1 11
2 12
3 13
4 14
5 15
6 16
7 17
8 18
9 19


# Harder Test with sort and limit

statement ok
create table temp_1(colA int, colB int, colC int, colD int);

# Select on empty table with sort
query
select * from temp_1 order by colA;
----


statement ok
insert into temp_1 values
    (0 , 1, 6113, 48270),
    (1 , 5, 8005, 22497),
    (2 , 0, 4476, 73541),
    (9 , 2, 2600, 32938),
    (10, 8, 398 , 60977),
    (11, 1, 5472, 33166),
    (12, 3, 1107, 94947),
    (13, 0, 4153, 54624),
    (14, 3, 1907, 48515),
    (15, 6, 9754, 95830),
    (16, 8, 5252, 96696),
    (3 , 2, 290 , 20860),
    (4 , 0, 3362, 47696),
    (5 , 8, 7022, 59586),
    (6 , 2, 170 , 92798),
    (7 , 2, 8524, 19746),
    (8 , 8, 3074, 56174),
    (17, 3, 4819, 99411),
    (18, 9, 666 , 86073),
    (19, 3, 701 , 34675),
    (20, 2, 2307, 97170),
    (28, 5, 8710, 194  ),
    (29, 5, 5519, 4256 ),
    (30, 0, 3803, 18357),
    (31, 6, 219 , 2090 ),
    (32, 2, 3842, 38160),
    (33, 8, 991 , 24527),
    (34, 4, 1443, 41478),
    (35, 2, 7564, 14242),
    (21, 4, 194 , 42522),
    (22, 3, 4256, 54404),
    (23, 7, 6037, 70355),
    (24, 6, 1973, 98970),
    (25, 3, 2090, 701  ),
    (26, 2, 5392, 94519),
    (27, 0, 8143, 47916),
    (36, 6, 2269, 54671),
    (37, 3, 3582, 77724),
    (38, 2, 5267, 69339),
    (39, 0, 1180, 94216),
    (40, 6, 3158, 16603),
    (41, 3, 4878, 85762),
    (42, 1, 34  , 95622),
    (43, 6, 9359, 1443 ),
    (44, 0, 2173, 31618),
    (45, 3, 9616, 67805),
    (46, 2, 2006, 92368),
    (47, 0, 6785, 75686),
    (48, 6, 2696, 19966),
    (49, 1, 3313, 70803),
    (50, 7, 4001, 99484),
    (51, 8, 9106, 28177),
    (52, 1, 8312, 52310),
    (58, 8, 483 , 86798),
    (59, 6, 9742, 59516),
    (60, 5, 4347, 34   ),
    (61, 2, 9484, 25743),
    (53, 1, 9567, 10624),
    (54, 2, 6866, 15963),
    (55, 1, 4956, 27755),
    (56, 1, 4060, 16227),
    (57, 9, 3683, 78077),
    (62, 2, 9506, 13806),
    (63, 2, 7758, 44219),
    (64, 2, 1999, 83926),
    (65, 3, 3886, 72321),
    (66, 3, 8020, 97035),
    (67, 0, 4633, 68232),
    (68, 4, 2699, 52465),
    (69, 8, 755 , 20385),
    (70, 2, 8311, 59841),
    (71, 4, 7826, 97071),
    (72, 7, 7027, 29049),
    (73, 9, 499 , 73848),
    (74, 1, 9088, 12950),
    (75, 3, 3517, 94485),
    (76, 7, 4339, 25951),
    (77, 2, 5801, 59170),
    (85, 9, 849 , 11512),
    (86, 3, 2697, 9484 ),
    (87, 2, 3060, 25890),
    (88, 2, 7329, 40526),
    (89, 1, 9418, 34767),
    (90, 9, 6826, 69422),
    (91, 1, 1411, 8020 ),
    (92, 9, 2110, 28695),
    (78, 3, 5737, 59426),
    (79, 3, 4299, 97298),
    (80, 3, 7683, 21340),
    (81, 0, 2045, 3683 ),
    (82, 8, 5290, 98787),
    (96, 1, 4733, 2699 ),
    (97, 1, 2273, 63790),
    (98, 3, 1394, 17139),
    (99, 6, 4482, 57463),
    (83, 3, 2914, 91662),
    (84, 9, 4626, 92192),
    (93, 4, 2758, 27498),
    (94, 5, 8802, 70169),
    (95, 9, 5706, 15441);


statement ok
create table temp_2(colA int, colB int, colC int);

statement ok
insert into temp_2 values
    (5, 290, 5),
    (6, 592, 6),
    (0, 142, 0),
    (1, 993, 1),
    (2, 837, 2),
    (3, 380, 3),
    (4, 240, 4),
    (7, 88 , 7),
    (8, 194, 8),
    (9, 638, 9),
    (10, 290, 0),
    (11, 878, 1),
    (12, 170, 2),
    (13, 332, 3),
    (14, 680, 4),
    (15, 2, 5),
    (16, 552, 6),
    (17, 561, 7),
    (18, 398, 8),
    (19, 974, 9),
    (20, 739, 0),
    (21, 352, 1),
    (53, 770, 3),
    (39, 160, 9),
    (40, 917, 0),
    (41, 949, 1),
    (36, 259, 6),
    (37, 812, 7),
    (38, 194, 8),
    (47, 399, 7),
    (48, 924, 8),
    (49, 731, 9),
    (50, 8  , 0),
    (51, 219, 1),
    (52, 276, 2),
    (55, 390, 5),
    (56, 419, 6),
    (57, 346, 7),
    (58, 898, 8),
    (59, 396, 9),
    (60, 221, 0),
    (61, 208, 1),
    (84, 711, 4),
    (85, 779, 5),
    (86, 648, 6),
    (87, 590, 7),
    (88, 241, 8),
    (89, 929, 9),
    (90, 914, 0),
    (91, 449, 1),
    (92, 815, 2),
    (93, 225, 3),
    (54, 991, 4),
    (22, 387, 2),
    (23, 598, 3),
    (24, 440, 4),
    (25, 83, 5),
    (26, 57, 6),
    (27, 883, 7),
    (28, 914, 8),
    (29, 538, 9),
    (30, 132, 0),
    (31, 723, 1),
    (62, 934, 2),
    (63, 510, 3),
    (64, 147, 4),
    (65, 156, 5),
    (66, 529, 6),
    (67, 86 , 7),
    (68, 384, 8),
    (69, 603, 9),
    (70, 107, 0),
    (71, 867, 1),
    (42, 42 , 2),
    (43, 272, 3),
    (44, 975, 4),
    (45, 518, 5),
    (46, 930, 6),
    (79, 125, 9),
    (80, 400, 0),
    (81, 187, 1),
    (82, 982, 2),
    (83, 641, 3),
    (94, 377, 4),
    (95, 120, 5),
    (96, 662, 6),
    (97, 277, 7),
    (98, 351, 8),
    (32, 666, 2),
    (33, 701, 3),
    (34, 311, 4),
    (35, 214, 5),
    (72, 253, 2),
    (73, 782, 3),
    (74, 124, 4),
    (75, 879, 5),
    (76, 34 , 6),
    (77, 143, 7),
    (78, 494, 8),
    (99, 722, 9);

query
select colB, colD, colA, colC from temp_1 order by colB desc, colD, colA desc limit 20;
----
9 11512 85 849
9 15441 95 5706
9 28695 92 2110
9 69422 90 6826
9 73848 73 499
9 78077 57 3683
9 86073 18 666
9 92192 84 4626
8 20385 69 755
8 24527 33 991
8 28177 51 9106
8 56174 8 3074
8 59586 5 7022
8 60977 10 398
8 86798 58 483
8 96696 16 5252
8 98787 82 5290
7 25951 76 4339
7 29049 72 7027
7 70355 23 6037



query
select * from temp_1 order by colB desc, colA + colD - colA desc, colA asc limit 20;
----
84 9 4626 92192
18 9 666 86073
57 9 3683 78077
73 9 499 73848
90 9 6826 69422
92 9 2110 28695
95 9 5706 15441
85 9 849 11512
82 8 5290 98787
16 8 5252 96696
58 8 483 86798
10 8 398 60977
5 8 7022 59586
8 8 3074 56174
51 8 9106 28177
33 8 991 24527
69 8 755 20385
50 7 4001 99484
23 7 6037 70355
72 7 7027 29049

query
select colA from (select colC, colA, colB, from temp_2 order by colC - colB + colA, colA limit 20);
----
1
19
54
44
41
82
28
46
40
62
48
11
27
2
58
89
90
75
71
37


# Repeat
query rowsort
select * from __mock_table_123, (select * from temp_1 order by colA desc limit 3);
----
1 99 6 4482 57463
1 98 3 1394 17139
1 97 1 2273 63790
2 99 6 4482 57463
2 98 3 1394 17139
2 97 1 2273 63790
3 99 6 4482 57463
3 98 3 1394 17139
3 97 1 2273 63790

# remember to enable your hash join optimizer to pass this
# you could disable this ensure if you haven't implemented it yet
query rowsort +ensure:hash_join
select * from
    temp_2 t2 inner join
    (select colB, colD, colA, colC from temp_1 order by colB desc, colD, colA desc limit 10 ) t1
    on t1.colA = t2.colA;
----
85 779 5 9 11512 85 849
95 120 5 9 15441 95 5706
92 815 2 9 28695 92 2110
90 914 0 9 69422 90 6826
73 782 3 9 73848 73 499
57 346 7 9 78077 57 3683
18 398 8 9 86073 18 666
84 711 4 9 92192 84 4626
69 603 9 8 20385 69 755
33 701 3 8 24527 33 991


# Large amount of data
query
select * from __mock_external_merge_sort_input order by v2 desc, v3 asc limit 100;
----
13222 14999 16
28222 14999 31
43222 14999 46
58222 14999 61
73222 14999 76
88222 14999 91
13221 14998 15
28221 14998 30
43221 14998 45
58221 14998 60
73221 14998 75
88221 14998 90
13220 14997 14
28220 14997 29
43220 14997 44
58220 14997 59
73220 14997 74
88220 14997 89
13219 14996 13
28219 14996 28
43219 14996 43
58219 14996 58
73219 14996 73
88219 14996 88
13218 14995 12
28218 14995 27
43218 14995 42
58218 14995 57
73218 14995 72
88218 14995 87
13217 14994 11
28217 14994 26
43217 14994 41
58217 14994 56
73217 14994 71
88217 14994 86
13216 14993 10
28216 14993 25
43216 14993 40
58216 14993 55
73216 14993 70
88216 14993 85
13215 14992 9
28215 14992 24
43215 14992 39
58215 14992 54
73215 14992 69
88215 14992 84
13214 14991 8
28214 14991 23
43214 14991 38
58214 14991 53
73214 14991 68
88214 14991 83
13213 14990 7
28213 14990 22
43213 14990 37
58213 14990 52
73213 14990 67
88213 14990 82
13212 14989 6
28212 14989 21
43212 14989 36
58212 14989 51
73212 14989 66
88212 14989 81
13211 14988 5
28211 14988 20
43211 14988 35
58211 14988 50
73211 14988 65
88211 14988 80
13210 14987 4
28210 14987 19
43210 14987 34
58210 14987 49
73210 14987 64
88210 14987 79
13209 14986 3
28209 14986 18
43209 14986 33
58209 14986 48
73209 14986 63
88209 14986 78
13208 14985 2
28208 14985 17
43208 14985 32
58208 14985 47
73208 14985 62
88208 14985 77
13207 14984 1
28207 14984 16
43207 14984 31
58207 14984 46
73207 14984 61
88207 14984 76
13206 14983 0
28206 14983 15
43206 14983 30
58206 14983 45


# remember to enable your hash join optimizer to pass this
# you could disable this ensure if you haven't implemented it yet
query rowsort +ensure:hash_join
select * from
    (select * from __mock_external_merge_sort_input order by v1 + v2 limit 2000) t1
    inner join __mock_table_1
    on t1.v2 = __mock_table_1.colB;
----
23 1800 26 18 1800
123 1900 15 19 1900
223 2000 4 20 2000
323 2100 104 21 2100
423 2200 93 22 2200
523 2300 82 23 2300
623 2400 71 24 2400
723 2500 60 25 2500
823 2600 49 26 2600
923 2700 38 27 2700
1023 2800 27 28 2800
1123 2900 16 29 2900
1223 3000 5 30 3000
1323 3100 105 31 3100
1423 3200 94 32 3200
1523 3300 83 33 3300
1623 3400 72 34 3400
1723 3500 61 35 3500
1823 3600 50 36 3600
1923 3700 39 37 3700
